/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as IndexImport } from './routes/index'
import { Route as OnboardingIndexImport } from './routes/onboarding/index'
import { Route as AppSettingsRouteImport } from './routes/_app/settings/route'
import { Route as AppDesignPlaygroundRouteImport } from './routes/_app/design-playground/route'
import { Route as AppChatRouteImport } from './routes/_app/chat/route'
import { Route as AppSettingsIndexImport } from './routes/_app/settings/index'
import { Route as AppDesignPlaygroundIndexImport } from './routes/_app/design-playground/index'
import { Route as AppChatIndexImport } from './routes/_app/chat/index'
import { Route as AppSettingsPersonalizationImport } from './routes/_app/settings/personalization'
import { Route as AppSettingsDeveloperImport } from './routes/_app/settings/developer'
import { Route as AppSettingsDataImport } from './routes/_app/settings/data'
import { Route as AppSettingsAppearanceImport } from './routes/_app/settings/appearance'
import { Route as AppSettingsPluginsIndexImport } from './routes/_app/settings/plugins/index'
import { Route as AppChatIdIndexImport } from './routes/_app/chat/$id/index'
import { Route as AppSettingsPluginsIdImport } from './routes/_app/settings/plugins/$id'
import { Route as AppDesignPlaygroundElementsTooltipImport } from './routes/_app/design-playground/elements/tooltip'
import { Route as AppDesignPlaygroundElementsMenuImport } from './routes/_app/design-playground/elements/menu'
import { Route as AppDesignPlaygroundElementsMarkdownImport } from './routes/_app/design-playground/elements/markdown'
import { Route as AppDesignPlaygroundElementsLlmPickerImport } from './routes/_app/design-playground/elements/llm-picker'
import { Route as AppDesignPlaygroundElementsFormImport } from './routes/_app/design-playground/elements/form'
import { Route as AppDesignPlaygroundElementsDialogImport } from './routes/_app/design-playground/elements/dialog'
import { Route as AppDesignPlaygroundElementsButtonImport } from './routes/_app/design-playground/elements/button'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingIndexRoute = OnboardingIndexImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRoute,
} as any)

const AppSettingsRouteRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDesignPlaygroundRouteRoute = AppDesignPlaygroundRouteImport.update({
  id: '/design-playground',
  path: '/design-playground',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppChatRouteRoute = AppChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppSettingsIndexRoute = AppSettingsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppDesignPlaygroundIndexRoute = AppDesignPlaygroundIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppDesignPlaygroundRouteRoute,
} as any)

const AppChatIndexRoute = AppChatIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppChatRouteRoute,
} as any)

const AppSettingsPersonalizationRoute = AppSettingsPersonalizationImport.update(
  {
    id: '/personalization',
    path: '/personalization',
    getParentRoute: () => AppSettingsRouteRoute,
  } as any,
)

const AppSettingsDeveloperRoute = AppSettingsDeveloperImport.update({
  id: '/developer',
  path: '/developer',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppSettingsDataRoute = AppSettingsDataImport.update({
  id: '/data',
  path: '/data',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppSettingsAppearanceRoute = AppSettingsAppearanceImport.update({
  id: '/appearance',
  path: '/appearance',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppSettingsPluginsIndexRoute = AppSettingsPluginsIndexImport.update({
  id: '/plugins/',
  path: '/plugins/',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppChatIdIndexRoute = AppChatIdIndexImport.update({
  id: '/$id/',
  path: '/$id/',
  getParentRoute: () => AppChatRouteRoute,
} as any)

const AppSettingsPluginsIdRoute = AppSettingsPluginsIdImport.update({
  id: '/plugins/$id',
  path: '/plugins/$id',
  getParentRoute: () => AppSettingsRouteRoute,
} as any)

const AppDesignPlaygroundElementsTooltipRoute =
  AppDesignPlaygroundElementsTooltipImport.update({
    id: '/elements/tooltip',
    path: '/elements/tooltip',
    getParentRoute: () => AppDesignPlaygroundRouteRoute,
  } as any)

const AppDesignPlaygroundElementsMenuRoute =
  AppDesignPlaygroundElementsMenuImport.update({
    id: '/elements/menu',
    path: '/elements/menu',
    getParentRoute: () => AppDesignPlaygroundRouteRoute,
  } as any)

const AppDesignPlaygroundElementsMarkdownRoute =
  AppDesignPlaygroundElementsMarkdownImport.update({
    id: '/elements/markdown',
    path: '/elements/markdown',
    getParentRoute: () => AppDesignPlaygroundRouteRoute,
  } as any)

const AppDesignPlaygroundElementsLlmPickerRoute =
  AppDesignPlaygroundElementsLlmPickerImport.update({
    id: '/elements/llm-picker',
    path: '/elements/llm-picker',
    getParentRoute: () => AppDesignPlaygroundRouteRoute,
  } as any)

const AppDesignPlaygroundElementsFormRoute =
  AppDesignPlaygroundElementsFormImport.update({
    id: '/elements/form',
    path: '/elements/form',
    getParentRoute: () => AppDesignPlaygroundRouteRoute,
  } as any)

const AppDesignPlaygroundElementsDialogRoute =
  AppDesignPlaygroundElementsDialogImport.update({
    id: '/elements/dialog',
    path: '/elements/dialog',
    getParentRoute: () => AppDesignPlaygroundRouteRoute,
  } as any)

const AppDesignPlaygroundElementsButtonRoute =
  AppDesignPlaygroundElementsButtonImport.update({
    id: '/elements/button',
    path: '/elements/button',
    getParentRoute: () => AppDesignPlaygroundRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/_app/chat': {
      id: '/_app/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof AppChatRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/design-playground': {
      id: '/_app/design-playground'
      path: '/design-playground'
      fullPath: '/design-playground'
      preLoaderRoute: typeof AppDesignPlaygroundRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingIndexImport
      parentRoute: typeof rootRoute
    }
    '/_app/settings/appearance': {
      id: '/_app/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AppSettingsAppearanceImport
      parentRoute: typeof AppSettingsRouteImport
    }
    '/_app/settings/data': {
      id: '/_app/settings/data'
      path: '/data'
      fullPath: '/settings/data'
      preLoaderRoute: typeof AppSettingsDataImport
      parentRoute: typeof AppSettingsRouteImport
    }
    '/_app/settings/developer': {
      id: '/_app/settings/developer'
      path: '/developer'
      fullPath: '/settings/developer'
      preLoaderRoute: typeof AppSettingsDeveloperImport
      parentRoute: typeof AppSettingsRouteImport
    }
    '/_app/settings/personalization': {
      id: '/_app/settings/personalization'
      path: '/personalization'
      fullPath: '/settings/personalization'
      preLoaderRoute: typeof AppSettingsPersonalizationImport
      parentRoute: typeof AppSettingsRouteImport
    }
    '/_app/chat/': {
      id: '/_app/chat/'
      path: '/'
      fullPath: '/chat/'
      preLoaderRoute: typeof AppChatIndexImport
      parentRoute: typeof AppChatRouteImport
    }
    '/_app/design-playground/': {
      id: '/_app/design-playground/'
      path: '/'
      fullPath: '/design-playground/'
      preLoaderRoute: typeof AppDesignPlaygroundIndexImport
      parentRoute: typeof AppDesignPlaygroundRouteImport
    }
    '/_app/settings/': {
      id: '/_app/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AppSettingsIndexImport
      parentRoute: typeof AppSettingsRouteImport
    }
    '/_app/design-playground/elements/button': {
      id: '/_app/design-playground/elements/button'
      path: '/elements/button'
      fullPath: '/design-playground/elements/button'
      preLoaderRoute: typeof AppDesignPlaygroundElementsButtonImport
      parentRoute: typeof AppDesignPlaygroundRouteImport
    }
    '/_app/design-playground/elements/dialog': {
      id: '/_app/design-playground/elements/dialog'
      path: '/elements/dialog'
      fullPath: '/design-playground/elements/dialog'
      preLoaderRoute: typeof AppDesignPlaygroundElementsDialogImport
      parentRoute: typeof AppDesignPlaygroundRouteImport
    }
    '/_app/design-playground/elements/form': {
      id: '/_app/design-playground/elements/form'
      path: '/elements/form'
      fullPath: '/design-playground/elements/form'
      preLoaderRoute: typeof AppDesignPlaygroundElementsFormImport
      parentRoute: typeof AppDesignPlaygroundRouteImport
    }
    '/_app/design-playground/elements/llm-picker': {
      id: '/_app/design-playground/elements/llm-picker'
      path: '/elements/llm-picker'
      fullPath: '/design-playground/elements/llm-picker'
      preLoaderRoute: typeof AppDesignPlaygroundElementsLlmPickerImport
      parentRoute: typeof AppDesignPlaygroundRouteImport
    }
    '/_app/design-playground/elements/markdown': {
      id: '/_app/design-playground/elements/markdown'
      path: '/elements/markdown'
      fullPath: '/design-playground/elements/markdown'
      preLoaderRoute: typeof AppDesignPlaygroundElementsMarkdownImport
      parentRoute: typeof AppDesignPlaygroundRouteImport
    }
    '/_app/design-playground/elements/menu': {
      id: '/_app/design-playground/elements/menu'
      path: '/elements/menu'
      fullPath: '/design-playground/elements/menu'
      preLoaderRoute: typeof AppDesignPlaygroundElementsMenuImport
      parentRoute: typeof AppDesignPlaygroundRouteImport
    }
    '/_app/design-playground/elements/tooltip': {
      id: '/_app/design-playground/elements/tooltip'
      path: '/elements/tooltip'
      fullPath: '/design-playground/elements/tooltip'
      preLoaderRoute: typeof AppDesignPlaygroundElementsTooltipImport
      parentRoute: typeof AppDesignPlaygroundRouteImport
    }
    '/_app/settings/plugins/$id': {
      id: '/_app/settings/plugins/$id'
      path: '/plugins/$id'
      fullPath: '/settings/plugins/$id'
      preLoaderRoute: typeof AppSettingsPluginsIdImport
      parentRoute: typeof AppSettingsRouteImport
    }
    '/_app/chat/$id/': {
      id: '/_app/chat/$id/'
      path: '/$id'
      fullPath: '/chat/$id'
      preLoaderRoute: typeof AppChatIdIndexImport
      parentRoute: typeof AppChatRouteImport
    }
    '/_app/settings/plugins/': {
      id: '/_app/settings/plugins/'
      path: '/plugins'
      fullPath: '/settings/plugins'
      preLoaderRoute: typeof AppSettingsPluginsIndexImport
      parentRoute: typeof AppSettingsRouteImport
    }
  }
}

// Create and export the route tree

interface AppChatRouteRouteChildren {
  AppChatIndexRoute: typeof AppChatIndexRoute
  AppChatIdIndexRoute: typeof AppChatIdIndexRoute
}

const AppChatRouteRouteChildren: AppChatRouteRouteChildren = {
  AppChatIndexRoute: AppChatIndexRoute,
  AppChatIdIndexRoute: AppChatIdIndexRoute,
}

const AppChatRouteRouteWithChildren = AppChatRouteRoute._addFileChildren(
  AppChatRouteRouteChildren,
)

interface AppDesignPlaygroundRouteRouteChildren {
  AppDesignPlaygroundIndexRoute: typeof AppDesignPlaygroundIndexRoute
  AppDesignPlaygroundElementsButtonRoute: typeof AppDesignPlaygroundElementsButtonRoute
  AppDesignPlaygroundElementsDialogRoute: typeof AppDesignPlaygroundElementsDialogRoute
  AppDesignPlaygroundElementsFormRoute: typeof AppDesignPlaygroundElementsFormRoute
  AppDesignPlaygroundElementsLlmPickerRoute: typeof AppDesignPlaygroundElementsLlmPickerRoute
  AppDesignPlaygroundElementsMarkdownRoute: typeof AppDesignPlaygroundElementsMarkdownRoute
  AppDesignPlaygroundElementsMenuRoute: typeof AppDesignPlaygroundElementsMenuRoute
  AppDesignPlaygroundElementsTooltipRoute: typeof AppDesignPlaygroundElementsTooltipRoute
}

const AppDesignPlaygroundRouteRouteChildren: AppDesignPlaygroundRouteRouteChildren =
  {
    AppDesignPlaygroundIndexRoute: AppDesignPlaygroundIndexRoute,
    AppDesignPlaygroundElementsButtonRoute:
      AppDesignPlaygroundElementsButtonRoute,
    AppDesignPlaygroundElementsDialogRoute:
      AppDesignPlaygroundElementsDialogRoute,
    AppDesignPlaygroundElementsFormRoute: AppDesignPlaygroundElementsFormRoute,
    AppDesignPlaygroundElementsLlmPickerRoute:
      AppDesignPlaygroundElementsLlmPickerRoute,
    AppDesignPlaygroundElementsMarkdownRoute:
      AppDesignPlaygroundElementsMarkdownRoute,
    AppDesignPlaygroundElementsMenuRoute: AppDesignPlaygroundElementsMenuRoute,
    AppDesignPlaygroundElementsTooltipRoute:
      AppDesignPlaygroundElementsTooltipRoute,
  }

const AppDesignPlaygroundRouteRouteWithChildren =
  AppDesignPlaygroundRouteRoute._addFileChildren(
    AppDesignPlaygroundRouteRouteChildren,
  )

interface AppSettingsRouteRouteChildren {
  AppSettingsAppearanceRoute: typeof AppSettingsAppearanceRoute
  AppSettingsDataRoute: typeof AppSettingsDataRoute
  AppSettingsDeveloperRoute: typeof AppSettingsDeveloperRoute
  AppSettingsPersonalizationRoute: typeof AppSettingsPersonalizationRoute
  AppSettingsIndexRoute: typeof AppSettingsIndexRoute
  AppSettingsPluginsIdRoute: typeof AppSettingsPluginsIdRoute
  AppSettingsPluginsIndexRoute: typeof AppSettingsPluginsIndexRoute
}

const AppSettingsRouteRouteChildren: AppSettingsRouteRouteChildren = {
  AppSettingsAppearanceRoute: AppSettingsAppearanceRoute,
  AppSettingsDataRoute: AppSettingsDataRoute,
  AppSettingsDeveloperRoute: AppSettingsDeveloperRoute,
  AppSettingsPersonalizationRoute: AppSettingsPersonalizationRoute,
  AppSettingsIndexRoute: AppSettingsIndexRoute,
  AppSettingsPluginsIdRoute: AppSettingsPluginsIdRoute,
  AppSettingsPluginsIndexRoute: AppSettingsPluginsIndexRoute,
}

const AppSettingsRouteRouteWithChildren =
  AppSettingsRouteRoute._addFileChildren(AppSettingsRouteRouteChildren)

interface AppRouteRouteChildren {
  AppChatRouteRoute: typeof AppChatRouteRouteWithChildren
  AppDesignPlaygroundRouteRoute: typeof AppDesignPlaygroundRouteRouteWithChildren
  AppSettingsRouteRoute: typeof AppSettingsRouteRouteWithChildren
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppChatRouteRoute: AppChatRouteRouteWithChildren,
  AppDesignPlaygroundRouteRoute: AppDesignPlaygroundRouteRouteWithChildren,
  AppSettingsRouteRoute: AppSettingsRouteRouteWithChildren,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AppRouteRouteWithChildren
  '/chat': typeof AppChatRouteRouteWithChildren
  '/design-playground': typeof AppDesignPlaygroundRouteRouteWithChildren
  '/settings': typeof AppSettingsRouteRouteWithChildren
  '/onboarding': typeof OnboardingIndexRoute
  '/settings/appearance': typeof AppSettingsAppearanceRoute
  '/settings/data': typeof AppSettingsDataRoute
  '/settings/developer': typeof AppSettingsDeveloperRoute
  '/settings/personalization': typeof AppSettingsPersonalizationRoute
  '/chat/': typeof AppChatIndexRoute
  '/design-playground/': typeof AppDesignPlaygroundIndexRoute
  '/settings/': typeof AppSettingsIndexRoute
  '/design-playground/elements/button': typeof AppDesignPlaygroundElementsButtonRoute
  '/design-playground/elements/dialog': typeof AppDesignPlaygroundElementsDialogRoute
  '/design-playground/elements/form': typeof AppDesignPlaygroundElementsFormRoute
  '/design-playground/elements/llm-picker': typeof AppDesignPlaygroundElementsLlmPickerRoute
  '/design-playground/elements/markdown': typeof AppDesignPlaygroundElementsMarkdownRoute
  '/design-playground/elements/menu': typeof AppDesignPlaygroundElementsMenuRoute
  '/design-playground/elements/tooltip': typeof AppDesignPlaygroundElementsTooltipRoute
  '/settings/plugins/$id': typeof AppSettingsPluginsIdRoute
  '/chat/$id': typeof AppChatIdIndexRoute
  '/settings/plugins': typeof AppSettingsPluginsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AppRouteRouteWithChildren
  '/onboarding': typeof OnboardingIndexRoute
  '/settings/appearance': typeof AppSettingsAppearanceRoute
  '/settings/data': typeof AppSettingsDataRoute
  '/settings/developer': typeof AppSettingsDeveloperRoute
  '/settings/personalization': typeof AppSettingsPersonalizationRoute
  '/chat': typeof AppChatIndexRoute
  '/design-playground': typeof AppDesignPlaygroundIndexRoute
  '/settings': typeof AppSettingsIndexRoute
  '/design-playground/elements/button': typeof AppDesignPlaygroundElementsButtonRoute
  '/design-playground/elements/dialog': typeof AppDesignPlaygroundElementsDialogRoute
  '/design-playground/elements/form': typeof AppDesignPlaygroundElementsFormRoute
  '/design-playground/elements/llm-picker': typeof AppDesignPlaygroundElementsLlmPickerRoute
  '/design-playground/elements/markdown': typeof AppDesignPlaygroundElementsMarkdownRoute
  '/design-playground/elements/menu': typeof AppDesignPlaygroundElementsMenuRoute
  '/design-playground/elements/tooltip': typeof AppDesignPlaygroundElementsTooltipRoute
  '/settings/plugins/$id': typeof AppSettingsPluginsIdRoute
  '/chat/$id': typeof AppChatIdIndexRoute
  '/settings/plugins': typeof AppSettingsPluginsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/_app/chat': typeof AppChatRouteRouteWithChildren
  '/_app/design-playground': typeof AppDesignPlaygroundRouteRouteWithChildren
  '/_app/settings': typeof AppSettingsRouteRouteWithChildren
  '/onboarding/': typeof OnboardingIndexRoute
  '/_app/settings/appearance': typeof AppSettingsAppearanceRoute
  '/_app/settings/data': typeof AppSettingsDataRoute
  '/_app/settings/developer': typeof AppSettingsDeveloperRoute
  '/_app/settings/personalization': typeof AppSettingsPersonalizationRoute
  '/_app/chat/': typeof AppChatIndexRoute
  '/_app/design-playground/': typeof AppDesignPlaygroundIndexRoute
  '/_app/settings/': typeof AppSettingsIndexRoute
  '/_app/design-playground/elements/button': typeof AppDesignPlaygroundElementsButtonRoute
  '/_app/design-playground/elements/dialog': typeof AppDesignPlaygroundElementsDialogRoute
  '/_app/design-playground/elements/form': typeof AppDesignPlaygroundElementsFormRoute
  '/_app/design-playground/elements/llm-picker': typeof AppDesignPlaygroundElementsLlmPickerRoute
  '/_app/design-playground/elements/markdown': typeof AppDesignPlaygroundElementsMarkdownRoute
  '/_app/design-playground/elements/menu': typeof AppDesignPlaygroundElementsMenuRoute
  '/_app/design-playground/elements/tooltip': typeof AppDesignPlaygroundElementsTooltipRoute
  '/_app/settings/plugins/$id': typeof AppSettingsPluginsIdRoute
  '/_app/chat/$id/': typeof AppChatIdIndexRoute
  '/_app/settings/plugins/': typeof AppSettingsPluginsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/chat'
    | '/design-playground'
    | '/settings'
    | '/onboarding'
    | '/settings/appearance'
    | '/settings/data'
    | '/settings/developer'
    | '/settings/personalization'
    | '/chat/'
    | '/design-playground/'
    | '/settings/'
    | '/design-playground/elements/button'
    | '/design-playground/elements/dialog'
    | '/design-playground/elements/form'
    | '/design-playground/elements/llm-picker'
    | '/design-playground/elements/markdown'
    | '/design-playground/elements/menu'
    | '/design-playground/elements/tooltip'
    | '/settings/plugins/$id'
    | '/chat/$id'
    | '/settings/plugins'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/onboarding'
    | '/settings/appearance'
    | '/settings/data'
    | '/settings/developer'
    | '/settings/personalization'
    | '/chat'
    | '/design-playground'
    | '/settings'
    | '/design-playground/elements/button'
    | '/design-playground/elements/dialog'
    | '/design-playground/elements/form'
    | '/design-playground/elements/llm-picker'
    | '/design-playground/elements/markdown'
    | '/design-playground/elements/menu'
    | '/design-playground/elements/tooltip'
    | '/settings/plugins/$id'
    | '/chat/$id'
    | '/settings/plugins'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_app/chat'
    | '/_app/design-playground'
    | '/_app/settings'
    | '/onboarding/'
    | '/_app/settings/appearance'
    | '/_app/settings/data'
    | '/_app/settings/developer'
    | '/_app/settings/personalization'
    | '/_app/chat/'
    | '/_app/design-playground/'
    | '/_app/settings/'
    | '/_app/design-playground/elements/button'
    | '/_app/design-playground/elements/dialog'
    | '/_app/design-playground/elements/form'
    | '/_app/design-playground/elements/llm-picker'
    | '/_app/design-playground/elements/markdown'
    | '/_app/design-playground/elements/menu'
    | '/_app/design-playground/elements/tooltip'
    | '/_app/settings/plugins/$id'
    | '/_app/chat/$id/'
    | '/_app/settings/plugins/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  OnboardingIndexRoute: typeof OnboardingIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  OnboardingIndexRoute: OnboardingIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/onboarding/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/chat",
        "/_app/design-playground",
        "/_app/settings"
      ]
    },
    "/_app/chat": {
      "filePath": "_app/chat/route.tsx",
      "parent": "/_app",
      "children": [
        "/_app/chat/",
        "/_app/chat/$id/"
      ]
    },
    "/_app/design-playground": {
      "filePath": "_app/design-playground/route.tsx",
      "parent": "/_app",
      "children": [
        "/_app/design-playground/",
        "/_app/design-playground/elements/button",
        "/_app/design-playground/elements/dialog",
        "/_app/design-playground/elements/form",
        "/_app/design-playground/elements/llm-picker",
        "/_app/design-playground/elements/markdown",
        "/_app/design-playground/elements/menu",
        "/_app/design-playground/elements/tooltip"
      ]
    },
    "/_app/settings": {
      "filePath": "_app/settings/route.tsx",
      "parent": "/_app",
      "children": [
        "/_app/settings/appearance",
        "/_app/settings/data",
        "/_app/settings/developer",
        "/_app/settings/personalization",
        "/_app/settings/",
        "/_app/settings/plugins/$id",
        "/_app/settings/plugins/"
      ]
    },
    "/onboarding/": {
      "filePath": "onboarding/index.tsx"
    },
    "/_app/settings/appearance": {
      "filePath": "_app/settings/appearance.tsx",
      "parent": "/_app/settings"
    },
    "/_app/settings/data": {
      "filePath": "_app/settings/data.tsx",
      "parent": "/_app/settings"
    },
    "/_app/settings/developer": {
      "filePath": "_app/settings/developer.tsx",
      "parent": "/_app/settings"
    },
    "/_app/settings/personalization": {
      "filePath": "_app/settings/personalization.tsx",
      "parent": "/_app/settings"
    },
    "/_app/chat/": {
      "filePath": "_app/chat/index.tsx",
      "parent": "/_app/chat"
    },
    "/_app/design-playground/": {
      "filePath": "_app/design-playground/index.tsx",
      "parent": "/_app/design-playground"
    },
    "/_app/settings/": {
      "filePath": "_app/settings/index.tsx",
      "parent": "/_app/settings"
    },
    "/_app/design-playground/elements/button": {
      "filePath": "_app/design-playground/elements/button.tsx",
      "parent": "/_app/design-playground"
    },
    "/_app/design-playground/elements/dialog": {
      "filePath": "_app/design-playground/elements/dialog.tsx",
      "parent": "/_app/design-playground"
    },
    "/_app/design-playground/elements/form": {
      "filePath": "_app/design-playground/elements/form.tsx",
      "parent": "/_app/design-playground"
    },
    "/_app/design-playground/elements/llm-picker": {
      "filePath": "_app/design-playground/elements/llm-picker.tsx",
      "parent": "/_app/design-playground"
    },
    "/_app/design-playground/elements/markdown": {
      "filePath": "_app/design-playground/elements/markdown.tsx",
      "parent": "/_app/design-playground"
    },
    "/_app/design-playground/elements/menu": {
      "filePath": "_app/design-playground/elements/menu.tsx",
      "parent": "/_app/design-playground"
    },
    "/_app/design-playground/elements/tooltip": {
      "filePath": "_app/design-playground/elements/tooltip.tsx",
      "parent": "/_app/design-playground"
    },
    "/_app/settings/plugins/$id": {
      "filePath": "_app/settings/plugins/$id.tsx",
      "parent": "/_app/settings"
    },
    "/_app/chat/$id/": {
      "filePath": "_app/chat/$id/index.tsx",
      "parent": "/_app/chat"
    },
    "/_app/settings/plugins/": {
      "filePath": "_app/settings/plugins/index.tsx",
      "parent": "/_app/settings"
    }
  }
}
ROUTE_MANIFEST_END */
